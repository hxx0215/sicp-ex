(define (filtered-accumulate combiner null-value term a next b filter)
  (if (> a b)
      null-value
    (if (filter a)
        (combiner (term a) (filtered-accumulate combiner null-value term (next a) b filter))
      (combiner null-value (filtered-accumulate combiner null-value term (next a) b filter))
      )
    )
  )

(define (prime a b)
  (filtered-accumulate + 0 identy a inc b prime?)
  )
(define (primeproduct n)
  (define (gcdfilter i)
    (= (gcd i n) 1)
    )
  (filtered-accumulate * 1 identy 1 inc n primeproduct)
  )
