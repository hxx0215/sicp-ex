(define (accumulate combiner null-value term a next b)
  (if (> a b)
      null-value
    (combiner (term a)
              (accumulate combiner null-value term (next a) next b)
              )
    )
  )
(define (sum term a next b)
  (accumulate + 0 term a next b)
  )
(define (product term a next b)
  (accumulate * 1 term a next b)
  )
(define (iden a)
  a
  )
(define (inc a)
  (+ a 1)
  )
(define (accumulate-iter combiner null-value term a next b)
  (define (iter a result)
    (if (> a b)
        result
      (iter (next a) (combiner (term a) result))
      )
    )
  (iter a null-value)
  )

(sum iden 1 inc 100)
(product iden 1 inc 7)
